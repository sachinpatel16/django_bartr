version: '3.8'

services:
  # PostgreSQL Database
  # db:
  #   image: postgres:15
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   environment:
  #     - POSTGRES_DB=bartr
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=dwij9143
  #   ports:
  #     - "5432:5432"
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  # Redis for Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Web Application
  web:
    build: .
    command: gunicorn --bind 0.0.0.0:8080 --workers 3 --timeout 120 config.wsgi:application
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8080:8080"
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.production
      - SECRET_KEY=django-insecure-your-secret-key-here-change-this-in-production
      - DEBUG=False
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,*,bartrlatest-8l446.sevalla.app,api.bartr.club
      - ENGINE=django.db.backends.postgresql
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=bartr
      - DB_USER=postgres
      - DB_PASSWORD=dwij9143
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - EMAIL_HOST_USER=your-email@gmail.com
      - EMAIL_HOST_PASSWORD=your-app-password
      - SERVER_EMAIL_SIGNATURE=Bartr
      - USE_CLOUDFRONT=False
      - AWS_STORAGE_BUCKET_NAME=djangobartr
      - AWS_ACCESS_KEY_ID=AKIA6L6AERXVRPJVIEEL
      - AWS_SECRET_ACCESS_KEY=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
      - AWS_S3_CUSTOM_DOMAIN=djangobartr.s3.amazonaws.com
      - API_KEY_SECRET=gAAAAABnLZyXV33WOqXmf-dmKviuREu7WKDqIcNAUYLUZDX0L2-KDUO_wzEbaiiaMlf003f_Ny7wjYpLUEW4SgLRJ5TSSl7rSg==
      - ADMINS=[["Admin", "admin@example.com"]]
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker
  celery:
    build: .
    command: celery -A config worker --loglevel=info
    volumes:
      - .:/app
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.production
      - SECRET_KEY=django-insecure-your-secret-key-here-change-this-in-production
      - DEBUG=False
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,*,bartrlatest-8l446.sevalla.app,api.bartr.club
      - ENGINE=django.db.backends.postgresql
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=bartr
      - DB_USER=postgres
      - DB_PASSWORD=dwij9143
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - EMAIL_HOST_USER=your-email@gmail.com
      - EMAIL_HOST_PASSWORD=your-app-password
      - SERVER_EMAIL_SIGNATURE=Bartr
      - USE_CLOUDFRONT=False
      - AWS_STORAGE_BUCKET_NAME=your-bucket-name
      - AWS_ACCESS_KEY_ID=your-access-key
      - AWS_SECRET_ACCESS_KEY=your-secret-key
      - AWS_S3_CUSTOM_DOMAIN=your-cloudfront-domain
      - API_KEY_SECRET=your-api-key-secret
      - ADMINS=[["Admin", "admin@example.com"]]
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Celery Beat (for scheduled tasks)
  celery-beat:
    build: .
    command: celery -A config beat --loglevel=info
    volumes:
      - .:/app
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.production
      - SECRET_KEY=django-insecure-your-secret-key-here-change-this-in-production
      - DEBUG=False
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,*,bartrlatest-8l446.sevalla.app,api.bartr.club
      - ENGINE=django.db.backends.postgresql
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=bartr
      - DB_USER=postgres
      - DB_PASSWORD=dwij9143
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - EMAIL_HOST_USER=your-email@gmail.com
      - EMAIL_HOST_PASSWORD=your-app-password
      - SERVER_EMAIL_SIGNATURE=Bartr
      - USE_CLOUDFRONT=False
      - AWS_STORAGE_BUCKET_NAME=your-bucket-name
      - AWS_ACCESS_KEY_ID=your-access-key
      - AWS_SECRET_ACCESS_KEY=your-secret-key
      - AWS_S3_CUSTOM_DOMAIN=your-cloudfront-domain
      - API_KEY_SECRET=your-api-key-secret
      - ADMINS=[["Admin", "admin@example.com"]]
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - web
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume: 